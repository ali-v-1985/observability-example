apiVersion: 1

datasources:
  # Mimir for metrics
  - name: Mimir
    type: prometheus
    access: proxy
    orgId: 1
    url: http://mimir:9009/prometheus
    isDefault: true
    version: 1
    editable: false
    jsonData:
      httpMethod: GET
      prometheusType: Mimir
      prometheusVersion: 2.40.0
      manageAlerts: false
      alertmanagerUid: ""
      httpHeaderName1: "X-Scope-OrgID"
    secureJsonData:
      httpHeaderValue1: "demo"

  # Loki for logs
  - name: Loki
    type: loki
    access: proxy
    orgId: 1
    url: http://loki:3100
    version: 1
    editable: false
    jsonData:
      derivedFields:
        - datasourceUid: tempo
          matcherRegex: "traceId=([\\w]+)"
          name: TraceID
          url: "$${__value.raw}"

  # Tempo for traces
  - name: Tempo
    type: tempo
    access: proxy
    orgId: 1
    url: http://tempo:3200
    version: 1
    editable: false
    uid: tempo
    jsonData:
      httpMethod: GET
      tracesToLogs:
        datasourceUid: loki
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [{ key: 'service.name', value: 'service' }]
        mapTagNamesEnabled: false
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        filterByTraceID: false
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: mimir
        tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(tempo_spanmetrics_latency_bucket[$__range]))'
      serviceMap:
        datasourceUid: mimir
      nodeGraph:
        enabled: true

  # Pyroscope for profiling
  - name: Pyroscope
    type: grafana-pyroscope-datasource
    access: proxy
    orgId: 1
    url: http://pyroscope:4040
    version: 1
    editable: false
